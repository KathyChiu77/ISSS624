[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Applications!\nIn this webpage, I am going to share with you my learning journey of geospatial analytics.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "In-class Ex/In-class Ex1/data/geospatial/MPSZ-2019.html",
    "href": "In-class Ex/In-class Ex1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to handle geospatial data in R by using sf package.\nBy the end of this hands-on exercise, you should acquire the following competencies:\n\ninstalling and loading sf and tidyverse packages into R environment,\nimporting geospatial data by using appropriate functions of sf package,\nimporting aspatial data by using appropriate function of readr package,\nexploring the content of simple feature data frame by using appropriate Base R and sf functions,\nassigning or transforming coordinate systems by using using appropriate sf functions,\nconverting an aspatial data into a sf data frame by using appropriate function of sf package,\nperforming geoprocessing tasks by using appropriate functions of sf package,\nperforming data wrangling tasks by using appropriate functions of dplyr package and\nperforming Exploratory Data Analysis (EDA) by using appropriate functions from ggplot2 package."
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#data-wrangling",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#data-wrangling",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Data wrangling",
    "text": "Data wrangling\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#joining-the-attribute-data-and-geospatial-data",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#joining-the-attribute-data-and-geospatial-data",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Joining the attribute data and geospatial data",
    "text": "Joining the attribute data and geospatial data\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nwrite_rds(mpsz_pop2020, \"Data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Plotting a choropleth map quickly by using qtm()",
    "text": "Plotting a choropleth map quickly by using qtm()\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Creating a choropleth map by using tmap’s elements",
    "text": "Creating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-base-map",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-base-map",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Drawing a base map",
    "text": "Drawing a base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-choropleth-map-using-tm_polygons",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-choropleth-map-using-tm_polygons",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Drawing a choropleth map using tm_polygons()",
    "text": "Drawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-a-choropleth-map-using-tm_fill-and-tm_border",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Drawing a choropleth map using tm_fill() and *tm_border()**",
    "text": "Drawing a choropleth map using tm_fill() and *tm_border()**\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-choropleth-maps-with-built-in-classification-methods",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Plotting choropleth maps with built-in classification methods",
    "text": "Plotting choropleth maps with built-in classification methods\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-choropleth-map-with-custome-break",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#plotting-choropleth-map-with-custome-break",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Plotting choropleth map with custome break",
    "text": "Plotting choropleth map with custome break\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#using-colourbrewer-palette",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#using-colourbrewer-palette",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Using ColourBrewer palette",
    "text": "Using ColourBrewer palette\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#map-legend",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#map-legend",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Map Legend",
    "text": "Map Legend\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#map-style",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#map-style",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Map style",
    "text": "Map style\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#cartographic-furniture",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#cartographic-furniture",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Cartographic Furniture",
    "text": "Cartographic Furniture\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Drawing Small Multiple Choropleth Maps",
    "text": "Drawing Small Multiple Choropleth Maps"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-assigning-multiple-values-to-at-least-one-of-the-aesthetic-arguments",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-assigning-multiple-values-to-at-least-one-of-the-aesthetic-arguments",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "By assigning multiple values to at least one of the aesthetic arguments",
    "text": "By assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-defining-a-group-by-variable-in-tm_facets",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-defining-a-group-by-variable-in-tm_facets",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "By defining a group-by variable in tm_facets()",
    "text": "By defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#by-creating-multiple-stand-alone-maps-with-tmap_arrange",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "By creating multiple stand-alone maps with tmap_arrange()",
    "text": "By creating multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#mappping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands-on Ex/Hands-on Ex 1/Hands-on Exercise 1.html#mappping-spatial-object-meeting-a-selection-criterion",
    "title": "Hands on Exercise 1: Data importing and wrangling",
    "section": "Mappping Spatial Object Meeting a Selection Criterion",
    "text": "Mappping Spatial Object Meeting a Selection Criterion\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html",
    "href": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html",
    "title": "Hands-on Exercise 2: Spatial Weights and Applications",
    "section": "",
    "text": "The main task of this hands-on exercise is to learn how to compute spatial weights using R. We are mainly using:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute spatial weights using appropriate functions of spdep package, and\ncalculate spatially lagged variables using appropriate functions of spdep package.\n\n\n\n\nTwo data sets will be used in this hands-on exercise, they are:\n\nHunan county boundary layer. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n\n\nIn this section, we will bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\KathyChiu77\\ISSS624\\Hands-on Ex\\Hands-on Ex 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R dataframe class.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\n\n select(1:4, 7, 15)  This function is used to select specific columns from a data frame.  1:4  means it selects the first, second, third, and fourth columns. The numbers  7  and  15  mean it also selects the seventh and fifteenth columns.\n\n\n\n\nNow, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#overview",
    "href": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#overview",
    "title": "Hands-on Exercise 2: Spatial Weights and Applications",
    "section": "",
    "text": "The main task of this hands-on exercise is to learn how to compute spatial weights using R. We are mainly using:\n\nimport geospatial data using appropriate function(s) of sf package,\nimport csv file using appropriate function of readr package,\nperform relational join using appropriate join function of dplyr package,\ncompute spatial weights using appropriate functions of spdep package, and\ncalculate spatially lagged variables using appropriate functions of spdep package."
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#the-study-area-and-data",
    "href": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#the-study-area-and-data",
    "title": "Hands-on Exercise 2: Spatial Weights and Applications",
    "section": "",
    "text": "Two data sets will be used in this hands-on exercise, they are:\n\nHunan county boundary layer. This is a geospatial data set in ESRI shapefile format.\nHunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012.\n\n\n\nBefore we get started, we need to ensure that spdep, sf, tmap and tidyverse packages of R are currently installed in your R.\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)"
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#getting-the-data-into-r-environment",
    "href": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#getting-the-data-into-r-environment",
    "title": "Hands-on Exercise 2: Spatial Weights and Applications",
    "section": "",
    "text": "In this section, we will bring a geospatial data and its associated attribute table into R environment. The geospatial data is in ESRI shapefile format and the attribute table is in csv fomat.\n\n\nThe code chunk below uses st_read() of sf package to import Hunan shapefile into R. The imported shapefile will be simple features Object of sf.\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `D:\\KathyChiu77\\ISSS624\\Hands-on Ex\\Hands-on Ex 2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\n\n\nNext, we will import Hunan_2012.csv into R by using read_csv() of readr package. The output is R dataframe class.\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n\nThe code chunk below will be used to update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe. This is performed by using left_join() of dplyr package.\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\n\n select(1:4, 7, 15)  This function is used to select specific columns from a data frame.  1:4  means it selects the first, second, third, and fourth columns. The numbers  7  and  15  mean it also selects the seventh and fifteenth columns."
  },
  {
    "objectID": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#visualising-regional-development-indicator",
    "href": "Hands-on Ex/Hands-on Ex 2/Hands-on Exercise 2.html#visualising-regional-development-indicator",
    "title": "Hands-on Exercise 2: Spatial Weights and Applications",
    "section": "",
    "text": "Now, we are going to prepare a basemap and a choropleth map showing the distribution of GDPPC 2012 by using qtm() of tmap package.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The specific task of this in-class exercise are as follows:\n\nto import Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall in to RStudio environment,\nto import geospatial data in ESRI shapefile format into sf data frame format,\nto perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and\nto visualise the distribution of passenger trip by using tmap methods and functions."
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#tasks",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#tasks",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "The specific task of this in-class exercise are as follows:\n\nto import Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall in to RStudio environment,\nto import geospatial data in ESRI shapefile format into sf data frame format,\nto perform data wrangling by using appropriate functions from tidyverse and sf pakcges, and\nto visualise the distribution of passenger trip by using tmap methods and functions."
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#getting-started",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#getting-started",
    "title": "In-class Exercise 1",
    "section": "Getting started",
    "text": "Getting started\nThe code chunk below uses p_load() of pacman package to check if the required packages have been installed on the computer. If they are, the packages will be launched. The packages used are:\n\ntmap: for thematic mapping\nsf: for geospatial data wrangling\ntidyverse: for non-spatial data wrangling\n\n\npacman::p_load(tmap, sf, tidyverse, knitr)"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#import-passenger-volume-by-origin-destination-bus-stops",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#import-passenger-volume-by-origin-destination-bus-stops",
    "title": "In-class Exercise 1",
    "section": "Import Passenger Volume by Origin-Destination Bus Stops",
    "text": "Import Passenger Volume by Origin-Destination Bus Stops\nThe code chunk below uses the read_csv() function of readr package to import the csv file into R and save it as a R dataframe called odbus.\n\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\nA quick check of odbus tibble data frame shows that the values in OROGIN_PT_CODE and DESTINATON_PT_CODE are in numeric data type.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;chr&gt; \"04168\", \"04168\", \"80119\", \"80119\", \"44069\", \"4406…\n$ DESTINATION_PT_CODE &lt;chr&gt; \"10051\", \"10051\", \"90079\", \"90079\", \"17229\", \"1722…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\nORIGIN_PT_CODE and DESTINATION_PT_CODE are numeric variables that are categorical in nature. As such, they should be transformed to factor so that R treats them as a grouping variable.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\nNotice that both of them are in factor data type now.\n\nglimpse(odbus)\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;chr&gt; \"2023-08\", \"2023-08\", \"2023-08\", \"2023-08\", \"2023-…\n$ DAY_TYPE            &lt;chr&gt; \"WEEKDAY\", \"WEEKENDS/HOLIDAY\", \"WEEKENDS/HOLIDAY\",…\n$ TIME_PER_HOUR       &lt;dbl&gt; 16, 16, 14, 14, 17, 17, 17, 17, 7, 17, 14, 10, 10,…\n$ PT_TYPE             &lt;chr&gt; \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"BUS\", \"…\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#extract-commuting-flow-data",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#extract-commuting-flow-data",
    "title": "In-class Exercise 1",
    "section": "Extract Commuting Flow data",
    "text": "Extract Commuting Flow data\nThe code chunk below extracts commuting flows on weekday during the rush hour (7am to 9am).\n\norigin7_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 7 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\nIt should look similar to the data table below.\n\nkable(head(origin7_9))\n\n\n\n\nORIGIN_PT_CODE\nTRIPS\n\n\n\n\n01012\n1617\n\n\n01013\n813\n\n\n01019\n1620\n\n\n01029\n2383\n\n\n01039\n2727\n\n\n01059\n1415\n\n\n\n\n\nWe will save the output in rds format for future used.\n\nwrite_rds(origin7_9, \"data/rds/origin7_9.rds\")\n\nThe code chunk below will be used to import the save origin7_9.rds into R environment.\n\norigin7_9 &lt;- read_rds(\"data/rds/origin7_9.rds\")"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#working-with-geospatial-data",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#working-with-geospatial-data",
    "title": "In-class Exercise 1",
    "section": "Working with Geospatial Data",
    "text": "Working with Geospatial Data\nGeospatial data is adopted to enrich analysis.\n\nImport Bus Stop Locations\nThe code chunk below uses the st_read() function of sf package to import BusStop shapefile into R as a simple feature data frame called BusStop. As BusStop uses svy21 projected coordinate system, the crs is set to 3414.\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `D:\\KathyChiu77\\ISSS624\\In-class Ex\\In-class Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\n\nThe structure of busstop sf tibble data frame should look as below.\n\nglimpse(busstop)\n\nRows: 5,161\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\nImport Planning Subzone data\nThe code chunk below uses the st_read() function of sf package to import MPSZ-2019 shapefile into R as a simple feature data frame called mpsz. To ensure we can use mpsz together with BusStop, mpsz is reprojected to the svy21 projected coordinate system (crs=3413).\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\",\n                   layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `D:\\KathyChiu77\\ISSS624\\In-class Ex\\In-class Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nThe structure of mpsz sf tibble data frame should look as below.\n\nglimpse(mpsz)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#geospatial-data-wrangling",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#geospatial-data-wrangling",
    "title": "In-class Exercise 1",
    "section": "Geospatial data wrangling",
    "text": "Geospatial data wrangling\n\nCombining Busstop and mpsz\nCode chunk below populates the planning subzone code (i.e. SUBZONE_C) of mpsz sf data frame into busstop sf data frame.\n\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\nBefore moving to the next step, it is wise to save the output into rds format.\n\nwrite_rds(busstop_mpsz, \"data/rds/busstop_mpsz.csv\")  \n\n\norigin_data &lt;- left_join(origin7_9 , busstop_mpsz,\n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE,\n         ORIGIN_SZ = SUBZONE_C)\n\nBefore continue, it is a good practice for us to check for duplicating records.\n\nduplicate &lt;- origin_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\nIf duplicated records are found, the code chunk below will be used to retain the unique records.\n\norigin_data &lt;- unique(origin_data)\n\nIt will be a good practice to confirm if the duplicating records issue has been addressed fully.\n\nmpsz_origtrip &lt;- left_join(mpsz, \n                           origin_data,\n                           by = c(\"SUBZONE_C\" = \"ORIGIN_SZ\"))"
  },
  {
    "objectID": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#choropleth-visualisation",
    "href": "In-class Ex/In-class Ex1/In-class_Ex1_demo.html#choropleth-visualisation",
    "title": "In-class Exercise 1",
    "section": "Choropleth Visualisation",
    "text": "Choropleth Visualisation\nPrepare a choropleth map showing the distribution of passenger trips at planning sub-zone.\n\ntm_shape(mpsz_origtrip)+\n  tm_fill(\"TRIPS\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Passenger trips\") +\n  tm_layout(main.title = \"Passenger trips generated at planning sub-zone level\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  }
]